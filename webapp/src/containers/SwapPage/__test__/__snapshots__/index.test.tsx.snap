// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SwapPage component should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <Connect(SwapPage)
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        isErrorAddingPoolLiquidity=""
        location={
          Object {
            "hash": "",
            "pathname": "/route/1",
            "search": "",
            "state": undefined,
          }
        }
      >
        <SwapPage
          fetchMaxAccountDfiRequest={[Function]}
          fetchPoolPairListRequest={[Function]}
          fetchTestPoolSwapRequestFrom={[Function]}
          fetchTestPoolSwapRequestTo={[Function]}
          fetchTokenBalanceListRequest={[Function]}
          fetchUtxoDfiRequest={[Function]}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          isErrorAddingPoolLiquidity=""
          isErrorPoolSwap=""
          isErrorTestPoolSwapFrom=""
          isErrorTestPoolSwapTo=""
          isLoadingPoolSwap={false}
          isLoadingRefreshUTXOS={false}
          isLoadingTestPoolSwapFrom={false}
          isLoadingTestPoolSwapTo={false}
          isLoadingTransferringTokens={false}
          isPoolSwapLoaded={false}
          location={
            Object {
              "hash": "",
              "pathname": "/route/1",
              "search": "",
              "state": undefined,
            }
          }
          maxAccountDfi={0}
          paymentRequests={Array []}
          poolPairList={Array []}
          poolSwapHash=""
          poolSwapRequest={[Function]}
          resetTestPoolSwapErrorFrom={[Function]}
          resetTestPoolSwapErrorTo={[Function]}
          resetTestPoolSwapRequestFrom={[Function]}
          resetTestPoolSwapRequestTo={[Function]}
          testPoolSwapFrom="-"
          testPoolSwapTo=""
          tokenBalanceList={Array []}
          utxoDfi={0}
          walletBalance={0}
        >
          <div
            className="main-wrapper"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                title="DEX - DeFi Wallet"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="DEX - DeFi Wallet"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <Connect(Header)>
              <Header
                openBackupWallet={[Function]}
                startUpdateApp={[Function]}
                updateAvailableBadge={false}
              >
                <header
                  className="header-bar"
                >
                  <h1>
                    Decentralized Exchange
                  </h1>
                  <ButtonGroup
                    role="group"
                    style={
                      Object {
                        "visibility": "hidden",
                      }
                    }
                    tag="div"
                  >
                    <div
                      className="btn-group"
                      role="group"
                      style={
                        Object {
                          "visibility": "hidden",
                        }
                      }
                    >
                      <Button
                        color="link"
                        tag={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "sensitive": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        to="/liquidity/createpoolpair"
                      >
                        <NavLink
                          aria-label={null}
                          className="btn btn-link"
                          onClick={[Function]}
                          to="/liquidity/createpoolpair"
                        >
                          <Link
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-link"
                            onClick={[Function]}
                            to={
                              Object {
                                "hash": "",
                                "pathname": "/liquidity/createpoolpair",
                                "search": "",
                                "state": null,
                              }
                            }
                          >
                            <LinkAnchor
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-link"
                              href="/liquidity/createpoolpair"
                              navigate={[Function]}
                              onClick={[Function]}
                            >
                              <a
                                aria-current={null}
                                aria-label={null}
                                className="btn btn-link"
                                href="/liquidity/createpoolpair"
                                onClick={[Function]}
                              >
                                <MdAdd>
                                  <IconBase
                                    attr={
                                      Object {
                                        "viewBox": "0 0 24 24",
                                      }
                                    }
                                  >
                                    <svg
                                      fill="currentColor"
                                      height="1em"
                                      stroke="currentColor"
                                      strokeWidth="0"
                                      style={
                                        Object {
                                          "color": undefined,
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                      width="1em"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                        key="0"
                                      />
                                    </svg>
                                  </IconBase>
                                </MdAdd>
                                <span
                                  className="d-lg-inline"
                                >
                                  Liquidity
                                </span>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </NavLink>
                      </Button>
                    </div>
                  </ButtonGroup>
                  <ButtonGroup
                    role="group"
                    tag="div"
                  >
                    <div
                      className="btn-group"
                      role="group"
                    >
                      <Button
                        color="link"
                        onClick={[Function]}
                        tag="button"
                      >
                        <button
                          aria-label={null}
                          className="btn btn-link"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdLaunch>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdLaunch>
                          <span
                            className="d-lg-inline"
                          >
                            Dex Explorer
                          </span>
                        </button>
                      </Button>
                    </div>
                  </ButtonGroup>
                </header>
              </Header>
            </Connect(Header)>
            <div
              className="content"
            >
              <section>
                <p>
                  Welcome to the DefiChain DEX (Decentralized Exchange) – a non-custodial exchange that is completely and truly decentralized.
                </p>
                <div>
                  <div>
                    <div>
                      <MdVpnKey>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12.65 10C11.83 7.67 9.61 6 7 6c-3.31 0-6 2.69-6 6s2.69 6 6 6c2.61 0 4.83-1.67 5.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdVpnKey>
                    </div>
                    <div>
                      <h3>
                        Your own private key
                      </h3>
                      <p>
                        Be in control of your own private key.
                      </p>
                    </div>
                  </div>
                  <div>
                    <div>
                      <MdPerson>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdPerson>
                    </div>
                    <div>
                      <h3>
                        Non-custodial
                      </h3>
                      <p>
                        Your funds stay in your wallet and never passes through a centralized exchange.
                      </p>
                    </div>
                  </div>
                  <div>
                    <div>
                      <MdComputer>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdComputer>
                    </div>
                    <div>
                      <h3>
                        Decentralized interface
                      </h3>
                      <p>
                        Transact directly with the blockchain from your app, without ever touching a server.
                      </p>
                    </div>
                  </div>
                  <div>
                    <div>
                      <MdPieChart>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdPieChart>
                    </div>
                    <div>
                      <h3>
                        Powered by liquidity pools
                      </h3>
                      <p>
                        Swaps are fulfilled via automated liquidity pools, not centralized order books.
                      </p>
                    </div>
                  </div>
                </div>
              </section>
            </div>
            <footer
              className="footer-bar"
            >
              <div
                className=""
              >
                <Row
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="row"
                  >
                    <Col
                      className="text-center w-100"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="text-center w-100 col"
                      >
                        <Button
                          color="primary"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary"
                            onClick={[Function]}
                            type="button"
                          >
                            Continue
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="col-auto"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="col-auto col"
                      >
                        Enter an amount to swap
                      </div>
                    </Col>
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <Button
                          color="primary"
                          disabled={true}
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary disabled"
                            disabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            Continue
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <dl
                    className="row"
                  >
                    <dt
                      className="col-sm-4 text-right"
                    >
                      From
                    </dt>
                    <dd
                      className="col-sm-8"
                    >
                       
                    </dd>
                    <dt
                      className="col-sm-4 text-right"
                    >
                      To
                    </dt>
                    <dd
                      className="col-sm-8"
                    >
                      - 
                    </dd>
                    <dt
                      className="col-sm-4 text-right"
                    >
                      Amount received (Subject to slippage)
                    </dt>
                    <dd
                      className="col-sm-8"
                    >
                      - 
                    </dd>
                    <dt
                      className="col-sm-4 text-right"
                    >
                      Liquidity provider fee
                    </dt>
                    <dd
                      className="col-sm-8"
                    >
                       
                    </dd>
                  </dl>
                </div>
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="col"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="col col"
                      >
                        Please verify transaction and press SWAP
                      </div>
                    </Col>
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <Button
                          className="mr-3"
                          color="link"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="mr-3 btn btn-link"
                            onClick={[Function]}
                            type="button"
                          >
                            Cancel
                          </button>
                        </Button>
                        <Button
                          color="primary"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary"
                            onClick={[Function]}
                            type="button"
                          >
                            Swap
                             
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <div
                    className="text-center"
                  >
                    <MdCheckCircle
                      className="footer-sheet-icon"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 24 24",
                          }
                        }
                        className="footer-sheet-icon"
                      >
                        <svg
                          className="footer-sheet-icon"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </MdCheckCircle>
                    <h2>
                      Transaction complete
                    </h2>
                    <p>
                      Your account balance will update once the transaction has been confirmed by DeFiChain
                    </p>
                    <div>
                      <b>
                        Transaction Hash
                      </b>
                       :  
                      <span />
                    </div>
                  </div>
                </div>
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <ViewOnChain
                          txid=""
                        >
                          <Button
                            className="mr-3"
                            color="link"
                            onClick={[Function]}
                            tag="button"
                          >
                            <button
                              aria-label={null}
                              className="mr-3 btn btn-link"
                              onClick={[Function]}
                              type="button"
                            >
                              View on chain
                            </button>
                          </Button>
                        </ViewOnChain>
                        <Button
                          className="mr-3"
                          color="link"
                          tag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "activeClassName": [Function],
                                "activeStyle": [Function],
                                "aria-current": [Function],
                                "className": [Function],
                                "exact": [Function],
                                "innerRef": [Function],
                                "isActive": [Function],
                                "location": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "sensitive": [Function],
                                "strict": [Function],
                                "style": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          to="/wallet/tokens"
                        >
                          <NavLink
                            aria-label={null}
                            className="mr-3 btn btn-link"
                            onClick={[Function]}
                            to="/wallet/tokens"
                          >
                            <Link
                              aria-current={null}
                              aria-label={null}
                              className="mr-3 btn btn-link"
                              onClick={[Function]}
                              to={
                                Object {
                                  "hash": "",
                                  "pathname": "/wallet/tokens",
                                  "search": "",
                                  "state": null,
                                }
                              }
                            >
                              <LinkAnchor
                                aria-current={null}
                                aria-label={null}
                                className="mr-3 btn btn-link"
                                href="/wallet/tokens"
                                navigate={[Function]}
                                onClick={[Function]}
                              >
                                <a
                                  aria-current={null}
                                  aria-label={null}
                                  className="mr-3 btn btn-link"
                                  href="/wallet/tokens"
                                  onClick={[Function]}
                                >
                                  Go to wallet
                                </a>
                              </LinkAnchor>
                            </Link>
                          </NavLink>
                        </Button>
                        <Button
                          color="primary"
                          tag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "activeClassName": [Function],
                                "activeStyle": [Function],
                                "aria-current": [Function],
                                "className": [Function],
                                "exact": [Function],
                                "innerRef": [Function],
                                "isActive": [Function],
                                "location": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "sensitive": [Function],
                                "strict": [Function],
                                "style": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          to="/swap"
                        >
                          <NavLink
                            aria-label={null}
                            className="btn btn-primary"
                            onClick={[Function]}
                            to="/swap"
                          >
                            <Link
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-primary"
                              onClick={[Function]}
                              to={
                                Object {
                                  "hash": "",
                                  "pathname": "/swap",
                                  "search": "",
                                  "state": null,
                                }
                              }
                            >
                              <LinkAnchor
                                aria-current={null}
                                aria-label={null}
                                className="btn btn-primary"
                                href="/swap"
                                navigate={[Function]}
                                onClick={[Function]}
                              >
                                <a
                                  aria-current={null}
                                  aria-label={null}
                                  className="btn btn-primary"
                                  href="/swap"
                                  onClick={[Function]}
                                >
                                  OK
                                   
                                </a>
                              </LinkAnchor>
                            </Link>
                          </NavLink>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <div>
                    <div
                      className="text-center position-relative"
                    >
                      <MdCheckCircle>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdCheckCircle>
                      <span>
                        UTXO prepared
                      </span>
                    </div>
                    <br />
                    <div
                      className="text-center position-relative"
                    >
                      <MdCheckCircle>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdCheckCircle>
                      <b>
                        Transferring tokens
                      </b>
                    </div>
                  </div>
                </div>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <div
                    className="text-center"
                  >
                    <MdErrorOutline
                      className="footer-sheet-icon undefined"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 24 24",
                          }
                        }
                        className="footer-sheet-icon undefined"
                      >
                        <svg
                          className="footer-sheet-icon undefined"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </MdErrorOutline>
                    <p />
                  </div>
                </div>
                <div
                  className="d-flex align-items-center justify-content-center"
                >
                  <Button
                    color="primary"
                    tag={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "activeClassName": [Function],
                          "activeStyle": [Function],
                          "aria-current": [Function],
                          "className": [Function],
                          "exact": [Function],
                          "innerRef": [Function],
                          "isActive": [Function],
                          "location": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "sensitive": [Function],
                          "strict": [Function],
                          "style": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    to="/swap"
                  >
                    <NavLink
                      aria-label={null}
                      className="btn btn-primary"
                      onClick={[Function]}
                      to="/swap"
                    >
                      <Link
                        aria-current={null}
                        aria-label={null}
                        className="btn btn-primary"
                        onClick={[Function]}
                        to={
                          Object {
                            "hash": "",
                            "pathname": "/swap",
                            "search": "",
                            "state": null,
                          }
                        }
                      >
                        <LinkAnchor
                          aria-current={null}
                          aria-label={null}
                          className="btn btn-primary"
                          href="/swap"
                          navigate={[Function]}
                          onClick={[Function]}
                        >
                          <a
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-primary"
                            href="/swap"
                            onClick={[Function]}
                          >
                            Back to DEX
                          </a>
                        </LinkAnchor>
                      </Link>
                    </NavLink>
                  </Button>
                </div>
              </div>
            </footer>
          </div>
        </SwapPage>
      </Connect(SwapPage)>
    </Provider>
  </Router>
</BrowserRouter>
`;
