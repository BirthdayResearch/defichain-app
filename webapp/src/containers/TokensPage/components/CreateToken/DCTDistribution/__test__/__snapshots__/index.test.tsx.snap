// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DCTDistribution component should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <DCTDistribution
        IsVerifyingCollateralModalOpen={true}
        csvData={Array []}
        handleActiveTab={[Function]}
        handleSubmit={[Function]}
        setCsvData={[Function]}
        setIsVerifyingCollateralModalOpen={[Function]}
      >
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <SideEffect(NullComponent)
            defer={true}
            encodeSpecialCharacters={true}
            title="Tokens - DeFi Wallet"
            titleAttributes={Object {}}
          >
            <NullComponent
              defer={true}
              encodeSpecialCharacters={true}
              title="Tokens - DeFi Wallet"
              titleAttributes={Object {}}
            />
          </SideEffect(NullComponent)>
        </HelmetWrapper>
        <Connect(Header)>
          <Header
            openBackupWallet={[Function]}
            startUpdateApp={[Function]}
            updateAvailableBadge={false}
          >
            <header
              className="header-bar"
            >
              <Button
                className="header-bar-back"
                color="link"
                onClick={[Function]}
                tag="button"
              >
                <button
                  aria-label={null}
                  className="header-bar-back btn btn-link"
                  onClick={[Function]}
                  type="button"
                >
                  <MdArrowBack>
                    <IconBase
                      attr={
                        Object {
                          "viewBox": "0 0 24 24",
                        }
                      }
                    >
                      <svg
                        fill="currentColor"
                        height="1em"
                        stroke="currentColor"
                        strokeWidth="0"
                        style={
                          Object {
                            "color": undefined,
                          }
                        }
                        viewBox="0 0 24 24"
                        width="1em"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                          key="0"
                        />
                      </svg>
                    </IconBase>
                  </MdArrowBack>
                  <span
                    className="d-lg-inline"
                  >
                    Back
                  </span>
                </button>
              </Button>
              <h1
                className=""
              >
                DCT distribution
              </h1>
              <ButtonGroup
                role="group"
                tag="div"
              >
                <div
                  className="btn-group"
                  role="group"
                >
                  <Button
                    color="link"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-label={null}
                      className="btn btn-link"
                      onClick={[Function]}
                      type="button"
                    >
                      <MdFileUpload>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdFileUpload>
                      <span
                        className="d-lg-inline"
                      >
                        Upload CSV
                      </span>
                    </button>
                  </Button>
                  <Button
                    color="link"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-label={null}
                      className="btn btn-link"
                      onClick={[Function]}
                      type="button"
                    >
                      <MdAdd>
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                        >
                          <svg
                            fill="currentColor"
                            height="1em"
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width="1em"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdAdd>
                      <span
                        className="d-lg-inline"
                      >
                        Add address
                      </span>
                    </button>
                  </Button>
                </div>
              </ButtonGroup>
            </header>
          </Header>
        </Connect(Header)>
        <div
          className="content"
        >
          <section
            className="h-100"
          >
            <AddressList
              csvData={Array []}
              handleDelete={[Function]}
              handleDeleteAll={[Function]}
              handleOnEnterPress={[Function]}
              newAddressFlag={false}
              openScanner={[Function]}
            >
              <Card
                tag="div"
              >
                <div
                  className="card"
                >
                  <div
                    className="undefined table-responsive-xl"
                  >
                    <Table
                      responsiveTag="div"
                      tag="table"
                    >
                      <table
                        className="table"
                      >
                        <thead>
                          <tr>
                            <th>
                              Address
                            </th>
                            <th
                              className="text-right"
                            />
                          </tr>
                        </thead>
                        <tbody
                          className="h-100"
                        >
                          <tr
                            className="undefined text-center"
                          >
                            <td>
                              Add addresses to your initial distribution list.
                            </td>
                            <td />
                          </tr>
                        </tbody>
                      </table>
                    </Table>
                  </div>
                </div>
              </Card>
            </AddressList>
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropTransition={
                Object {
                  "mountOnEnter": true,
                  "timeout": 150,
                }
              }
              centered={true}
              container="body"
              fade={true}
              isOpen={false}
              keyboard={true}
              modalTransition={
                Object {
                  "timeout": 300,
                }
              }
              onClosed={[Function]}
              onOpened={[Function]}
              returnFocusAfterClose={true}
              role="dialog"
              scrollable={false}
              toggle={[Function]}
              trapFocus={false}
              unmountOnClose={true}
              zIndex={1050}
            />
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropTransition={
                Object {
                  "mountOnEnter": true,
                  "timeout": 150,
                }
              }
              centered={true}
              className="qr-scanner "
              container="body"
              fade={true}
              isOpen={false}
              keyboard={true}
              modalTransition={
                Object {
                  "timeout": 300,
                }
              }
              onClosed={[Function]}
              onOpened={[Function]}
              returnFocusAfterClose={true}
              role="dialog"
              scrollable={false}
              toggle={[Function]}
              trapFocus={false}
              unmountOnClose={true}
              zIndex={1050}
            />
          </section>
        </div>
        <footer
          className="footer-bar"
        >
          <div
            className="d-none"
          >
            <Row
              className="justify-content-between align-items-center"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <div
                className="justify-content-between align-items-center row"
              >
                <Col
                  className="col-auto"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="col-auto col"
                  >
                    <div
                      className="caption-secondary"
                    >
                      DFI required
                    </div>
                    <div>
                      1,000
                       
                      DFI
                    </div>
                  </div>
                </Col>
                <Col
                  className="d-flex justify-content-end"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="d-flex justify-content-end col"
                  >
                    <Button
                      className="mr-3"
                      color="link"
                      tag={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "activeClassName": [Function],
                            "activeStyle": [Function],
                            "aria-current": [Function],
                            "className": [Function],
                            "exact": [Function],
                            "innerRef": [Function],
                            "isActive": [Function],
                            "location": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "sensitive": [Function],
                            "strict": [Function],
                            "style": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      to="/tokens"
                    >
                      <NavLink
                        aria-label={null}
                        className="mr-3 btn btn-link"
                        onClick={[Function]}
                        to="/tokens"
                      >
                        <Link
                          aria-current={null}
                          aria-label={null}
                          className="mr-3 btn btn-link"
                          onClick={[Function]}
                          to={
                            Object {
                              "hash": "",
                              "pathname": "/tokens",
                              "search": "",
                              "state": null,
                            }
                          }
                        >
                          <LinkAnchor
                            aria-current={null}
                            aria-label={null}
                            className="mr-3 btn btn-link"
                            href="/tokens"
                            navigate={[Function]}
                            onClick={[Function]}
                          >
                            <a
                              aria-current={null}
                              aria-label={null}
                              className="mr-3 btn btn-link"
                              href="/tokens"
                              onClick={[Function]}
                            >
                              Cancel
                            </a>
                          </LinkAnchor>
                        </Link>
                      </NavLink>
                    </Button>
                    <Button
                      color="primary"
                      disabled={true}
                      onClick={[Function]}
                      tag="button"
                    >
                      <button
                        aria-label={null}
                        className="btn btn-primary disabled"
                        disabled={true}
                        onClick={[Function]}
                        type="button"
                      >
                        Continue
                      </button>
                    </Button>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
          <div
            className=""
          >
            <div
              className="footer-sheet"
            >
              <dl
                className="row"
              >
                <dd
                  className="col-12"
                >
                  <Spinner>
                    <svg
                      viewBox="0 0 48 48"
                    >
                      <circle
                        cx="24"
                        cy="24"
                        fill="none"
                        r="16"
                        strokeWidth="6"
                      />
                    </svg>
                  </Spinner>
                  <span
                    className="mb-0"
                  >
                    Verifying collateral
                  </span>
                </dd>
              </dl>
            </div>
          </div>
        </footer>
      </DCTDistribution>
    </Provider>
  </Router>
</BrowserRouter>
`;
