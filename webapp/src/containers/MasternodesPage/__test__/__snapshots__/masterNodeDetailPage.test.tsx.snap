// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Master Node Detail Page should check for snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Connect(MasterNodeDetailPage)
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/route/1",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    isErrorResigningMasterNode="isErrorResigningMasterNode"
    isMasterNodeResigning={true}
    location={
      Object {
        "hash": "",
        "pathname": "/route/1",
        "search": "",
        "state": undefined,
      }
    }
    masternodes={Array []}
    match={
      Object {
        "isExact": false,
        "params": Object {
          "hash": "1",
        },
        "path": "/route/:hash",
        "url": "/route/1",
      }
    }
    resignMasterNode={[Function]}
    resignedMasterNodeData="resignedMasterNodeData"
  />
</ContextProvider>
`;
