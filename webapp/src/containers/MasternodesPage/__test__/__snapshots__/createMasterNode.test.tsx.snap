// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create Master Node should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <Connect(CreateMasterNode)
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/route/1",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/route/1",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": false,
            "params": Object {
              "hash": "1",
            },
            "path": "/route/:hash",
            "url": "/route/1",
          }
        }
      >
        <CreateMasterNode
          createMasterNode={[Function]}
          createdMasterNodeData={Object {}}
          fetchWalletBalanceRequest={[Function]}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/route/1",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          isBalanceError={true}
          isBalanceFetching={true}
          isErrorCreatingMasterNode=""
          isErrorModalRestart={false}
          isMasterNodeCreating={false}
          isRestartNode={false}
          location={
            Object {
              "hash": "",
              "pathname": "/route/1",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": false,
              "params": Object {
                "hash": "1",
              },
              "path": "/route/:hash",
              "url": "/route/1",
            }
          }
          startRestartNodeWithMasterNode={[Function]}
          unit="DFI"
          walletBalance={0}
        >
          <div
            className="main-wrapper"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                title="Masternodes – DeFi Blockchain Client"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="Masternodes – DeFi Blockchain Client"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <header
              className="header-bar"
            >
              <Button
                className="header-bar-back"
                color="link"
                tag={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "displayName": "NavLink",
                    "propTypes": Object {
                      "activeClassName": [Function],
                      "activeStyle": [Function],
                      "aria-current": [Function],
                      "className": [Function],
                      "exact": [Function],
                      "innerRef": [Function],
                      "isActive": [Function],
                      "location": [Function],
                      "onClick": [Function],
                      "replace": [Function],
                      "strict": [Function],
                      "style": [Function],
                      "target": [Function],
                      "to": [Function],
                    },
                    "render": [Function],
                  }
                }
                to="/masternodes"
              >
                <NavLink
                  aria-label={null}
                  className="header-bar-back btn btn-link"
                  onClick={[Function]}
                  to="/masternodes"
                >
                  <Link
                    aria-current={null}
                    aria-label={null}
                    className="header-bar-back btn btn-link"
                    onClick={[Function]}
                    to={
                      Object {
                        "hash": "",
                        "pathname": "/masternodes",
                        "search": "",
                        "state": null,
                      }
                    }
                  >
                    <LinkAnchor
                      aria-current={null}
                      aria-label={null}
                      className="header-bar-back btn btn-link"
                      href="/masternodes"
                      navigate={[Function]}
                      onClick={[Function]}
                    >
                      <a
                        aria-current={null}
                        aria-label={null}
                        className="header-bar-back btn btn-link"
                        href="/masternodes"
                        onClick={[Function]}
                      >
                        <MdArrowBack>
                          <IconBase
                            attr={
                              Object {
                                "viewBox": "0 0 24 24",
                              }
                            }
                          >
                            <svg
                              fill="currentColor"
                              height="1em"
                              stroke="currentColor"
                              strokeWidth="0"
                              style={
                                Object {
                                  "color": undefined,
                                }
                              }
                              viewBox="0 0 24 24"
                              width="1em"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                                key="0"
                              />
                            </svg>
                          </IconBase>
                        </MdArrowBack>
                        <span
                          className="d-lg-inline"
                        >
                          Masternodes
                        </span>
                      </a>
                    </LinkAnchor>
                  </Link>
                </NavLink>
              </Button>
              <h1
                className=""
              >
                Create Master Node
              </h1>
            </header>
            <div
              className="content"
            />
            <footer
              className="footer-bar"
            >
              <div
                className=""
              >
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <Button
                          className="mr-3"
                          color="link"
                          tag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "NavLink",
                              "propTypes": Object {
                                "activeClassName": [Function],
                                "activeStyle": [Function],
                                "aria-current": [Function],
                                "className": [Function],
                                "exact": [Function],
                                "innerRef": [Function],
                                "isActive": [Function],
                                "location": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "strict": [Function],
                                "style": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          to="/masternodes"
                        >
                          <NavLink
                            aria-label={null}
                            className="mr-3 btn btn-link"
                            onClick={[Function]}
                            to="/masternodes"
                          >
                            <Link
                              aria-current={null}
                              aria-label={null}
                              className="mr-3 btn btn-link"
                              onClick={[Function]}
                              to={
                                Object {
                                  "hash": "",
                                  "pathname": "/masternodes",
                                  "search": "",
                                  "state": null,
                                }
                              }
                            >
                              <LinkAnchor
                                aria-current={null}
                                aria-label={null}
                                className="mr-3 btn btn-link"
                                href="/masternodes"
                                navigate={[Function]}
                                onClick={[Function]}
                              >
                                <a
                                  aria-current={null}
                                  aria-label={null}
                                  className="mr-3 btn btn-link"
                                  href="/masternodes"
                                  onClick={[Function]}
                                >
                                  Cancel
                                </a>
                              </LinkAnchor>
                            </Link>
                          </NavLink>
                        </Button>
                        <Button
                          color="primary"
                          disabled={true}
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary disabled"
                            disabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            Create Master Node
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <dl
                    className="row"
                  >
                    <dd
                      className="col-12"
                    >
                      <span
                        className="h2 mb-0"
                      >
                        Are you sure you want to create a master node?
                      </span>
                    </dd>
                  </dl>
                </div>
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <Button
                          className="mr-3"
                          color="link"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="mr-3 btn btn-link"
                            onClick={[Function]}
                            type="button"
                          >
                            Cancel
                          </button>
                        </Button>
                        <Button
                          color="primary"
                          disabled={true}
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary disabled"
                            disabled={true}
                            onClick={[Function]}
                            type="button"
                          >
                            Continue
                             
                            <span
                              className="timer"
                            >
                              5
                            </span>
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <div
                    className="text-center"
                  >
                    <p>
                      You can manually set masternode config in defi.conf or you can automatic set this masternode config by restarting the node.
                    </p>
                    <MdCheckCircle
                      className="footer-sheet-icon"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 24 24",
                          }
                        }
                        className="footer-sheet-icon"
                      >
                        <svg
                          className="footer-sheet-icon"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </MdCheckCircle>
                    <p>
                      Masternode Operator: undefined
                    </p>
                    <p>
                      Masternode Owner: undefined
                    </p>
                  </div>
                </div>
                <Row
                  className="justify-content-between align-items-center"
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="justify-content-between align-items-center row"
                  >
                    <Col
                      className="d-flex justify-content-end"
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="d-flex justify-content-end col"
                      >
                        <Button
                          color="primary"
                          tag={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "NavLink",
                              "propTypes": Object {
                                "activeClassName": [Function],
                                "activeStyle": [Function],
                                "aria-current": [Function],
                                "className": [Function],
                                "exact": [Function],
                                "innerRef": [Function],
                                "isActive": [Function],
                                "location": [Function],
                                "onClick": [Function],
                                "replace": [Function],
                                "strict": [Function],
                                "style": [Function],
                                "target": [Function],
                                "to": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          to="/masternodes"
                        >
                          <NavLink
                            aria-label={null}
                            className="btn btn-primary"
                            onClick={[Function]}
                            to="/masternodes"
                          >
                            <Link
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-primary"
                              onClick={[Function]}
                              to={
                                Object {
                                  "hash": "",
                                  "pathname": "/masternodes",
                                  "search": "",
                                  "state": null,
                                }
                              }
                            >
                              <LinkAnchor
                                aria-current={null}
                                aria-label={null}
                                className="btn btn-primary"
                                href="/masternodes"
                                navigate={[Function]}
                                onClick={[Function]}
                              >
                                <a
                                  aria-current={null}
                                  aria-label={null}
                                  className="btn btn-primary"
                                  href="/masternodes"
                                  onClick={[Function]}
                                >
                                  Back to Masternode Page
                                </a>
                              </LinkAnchor>
                            </Link>
                          </NavLink>
                        </Button>
                        <Button
                          className="ml-4"
                          color="primary"
                          onClick={[Function]}
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="ml-4 btn btn-primary"
                            onClick={[Function]}
                            type="button"
                          >
                            Restart node
                          </button>
                        </Button>
                      </div>
                    </Col>
                  </div>
                </Row>
              </div>
              <div
                className="d-none"
              >
                <div
                  className="footer-sheet"
                >
                  <div
                    className="text-center"
                  >
                    <MdErrorOutline
                      className="footer-sheet-icon undefined"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 24 24",
                          }
                        }
                        className="footer-sheet-icon undefined"
                      >
                        <svg
                          className="footer-sheet-icon undefined"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </MdErrorOutline>
                    <p />
                  </div>
                </div>
                <div
                  className="d-flex align-items-center justify-content-center"
                >
                  <Button
                    color="primary"
                    tag={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "displayName": "NavLink",
                        "propTypes": Object {
                          "activeClassName": [Function],
                          "activeStyle": [Function],
                          "aria-current": [Function],
                          "className": [Function],
                          "exact": [Function],
                          "innerRef": [Function],
                          "isActive": [Function],
                          "location": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "strict": [Function],
                          "style": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    to="/masternodes"
                  >
                    <NavLink
                      aria-label={null}
                      className="btn btn-primary"
                      onClick={[Function]}
                      to="/masternodes"
                    >
                      <Link
                        aria-current={null}
                        aria-label={null}
                        className="btn btn-primary"
                        onClick={[Function]}
                        to={
                          Object {
                            "hash": "",
                            "pathname": "/masternodes",
                            "search": "",
                            "state": null,
                          }
                        }
                      >
                        <LinkAnchor
                          aria-current={null}
                          aria-label={null}
                          className="btn btn-primary"
                          href="/masternodes"
                          navigate={[Function]}
                          onClick={[Function]}
                        >
                          <a
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-primary"
                            href="/masternodes"
                            onClick={[Function]}
                          >
                            Back to Masternode Page
                          </a>
                        </LinkAnchor>
                      </Link>
                    </NavLink>
                  </Button>
                </div>
              </div>
            </footer>
          </div>
        </CreateMasterNode>
      </Connect(CreateMasterNode)>
    </Provider>
  </Router>
</BrowserRouter>
`;
