// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MinerPage component should check for snapshot 1`] = `
<MemoryRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <MinerPage
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/route/1",
          "search": "",
          "state": undefined,
        }
      }
      match={
        Object {
          "isExact": false,
          "params": Object {
            "id": "1",
          },
          "path": "/route/:id",
          "url": "/route/1",
        }
      }
    >
      <div
        className="main-wrapper"
      >
        <HelmetWrapper
          defer={true}
          encodeSpecialCharacters={true}
        >
          <SideEffect(NullComponent)
            defer={true}
            encodeSpecialCharacters={true}
            title={
              Array [
                "Miner",
                "1 –",
                "DeFi Blockchain Client",
              ]
            }
            titleAttributes={Object {}}
          >
            <NullComponent
              defer={true}
              encodeSpecialCharacters={true}
              title={
                Array [
                  "Miner",
                  "1 –",
                  "DeFi Blockchain Client",
                ]
              }
              titleAttributes={Object {}}
            />
          </SideEffect(NullComponent)>
        </HelmetWrapper>
        <header
          className="header-bar"
        >
          <Button
            className="header-bar-back"
            color="link"
            tag={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "displayName": "NavLink",
                "propTypes": Object {
                  "activeClassName": [Function],
                  "activeStyle": [Function],
                  "aria-current": [Function],
                  "className": [Function],
                  "exact": [Function],
                  "innerRef": [Function],
                  "isActive": [Function],
                  "location": [Function],
                  "onClick": [Function],
                  "replace": [Function],
                  "strict": [Function],
                  "style": [Function],
                  "target": [Function],
                  "to": [Function],
                },
                "render": [Function],
              }
            }
            to="/blockchain"
          >
            <NavLink
              aria-label={null}
              className="header-bar-back btn btn-link"
              onClick={[Function]}
              to="/blockchain"
            >
              <Link
                aria-current={null}
                aria-label={null}
                className="header-bar-back btn btn-link"
                onClick={[Function]}
                to={
                  Object {
                    "hash": "",
                    "pathname": "/blockchain",
                    "search": "",
                    "state": null,
                  }
                }
              >
                <LinkAnchor
                  aria-current={null}
                  aria-label={null}
                  className="header-bar-back btn btn-link"
                  href="/blockchain"
                  navigate={[Function]}
                  onClick={[Function]}
                >
                  <a
                    aria-current={null}
                    aria-label={null}
                    className="header-bar-back btn btn-link"
                    href="/blockchain"
                    onClick={[Function]}
                  >
                    <MdArrowBack>
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 24 24",
                          }
                        }
                      >
                        <svg
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 24 24"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </MdArrowBack>
                    <span
                      className="d-lg-inline"
                    >
                      Blockchain
                    </span>
                  </a>
                </LinkAnchor>
              </Link>
            </NavLink>
          </Button>
          <h1>
            Miner
             
            1
          </h1>
        </header>
        <div
          className="content"
        >
          <section>
            Miner
          </section>
        </div>
      </div>
    </MinerPage>
  </Router>
</MemoryRouter>
`;
