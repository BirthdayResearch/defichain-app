// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EncryptWalletPage component should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <EncryptWalletModal>
        <div>
          <Row
            className="justify-content-center"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <div
              className="justify-content-center row"
            >
              <Col
                md="6"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <div
                  className="col-md-6"
                >
                  <div
                    className="text-center"
                  >
                    <section>
                      <MdLock
                        size={20}
                      >
                        <IconBase
                          attr={
                            Object {
                              "viewBox": "0 0 24 24",
                            }
                          }
                          size={20}
                        >
                          <svg
                            fill="currentColor"
                            height={20}
                            stroke="currentColor"
                            strokeWidth="0"
                            style={
                              Object {
                                "color": undefined,
                              }
                            }
                            viewBox="0 0 24 24"
                            width={20}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
                              key="0"
                            />
                          </svg>
                        </IconBase>
                      </MdLock>
                      <label
                        className="text-center"
                      >
                        Enabling wallet locking with a passphrase is recommended for security. Enter the passphrase which you will use to unlock your wallet.
                      </label>
                      <div
                        className="px-5"
                      >
                        <InputGroup
                          tag="div"
                        >
                          <div
                            className="input-group"
                          >
                            <Input
                              id="passphraseLabel"
                              name="passphrase"
                              onChange={[Function]}
                              placeholder="Passphrase"
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="passphraseLabel"
                                name="passphrase"
                                onChange={[Function]}
                                placeholder="Passphrase"
                                type="password"
                                value=""
                              />
                            </Input>
                            <Label
                              for="passphraseLabel"
                              tag="label"
                              widths={
                                Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ]
                              }
                            >
                              <label
                                className=""
                                htmlFor="passphraseLabel"
                              >
                                Passphrase
                              </label>
                            </Label>
                          </div>
                        </InputGroup>
                        <InputGroup
                          tag="div"
                        >
                          <div
                            className="input-group"
                          >
                            <Input
                              id="passphraseLabelConfirm"
                              name="confirmPassphrase"
                              onChange={[Function]}
                              placeholder="Confirm passphrase"
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="passphraseLabelConfirm"
                                name="confirmPassphrase"
                                onChange={[Function]}
                                placeholder="Confirm passphrase"
                                type="password"
                                value=""
                              />
                            </Input>
                            <Label
                              for="passphraseLabelConfirm"
                              tag="label"
                              widths={
                                Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ]
                              }
                            >
                              <label
                                className=""
                                htmlFor="passphraseLabelConfirm"
                              >
                                Confirm passphrase
                              </label>
                            </Label>
                          </div>
                        </InputGroup>
                      </div>
                      <label
                        className="text-center"
                      >
                        Keep your passphrase safe. Losing it means you need to reset DeFi app to default settings and restore your wallet again.
                      </label>
                      <div
                        className="mt-4 text-center"
                      >
                        <Button
                          className="ml-5"
                          color="link"
                          size="sm"
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="ml-5 btn btn-link btn-sm"
                            onClick={[Function]}
                          >
                            Later
                          </button>
                        </Button>
                        <Button
                          color="primary"
                          disabled={true}
                          size="sm"
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-primary btn-sm disabled"
                            disabled={true}
                            onClick={[Function]}
                          >
                            Enable locking
                          </button>
                        </Button>
                      </div>
                    </section>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </EncryptWalletModal>
    </Provider>
  </Router>
</BrowserRouter>
`;
