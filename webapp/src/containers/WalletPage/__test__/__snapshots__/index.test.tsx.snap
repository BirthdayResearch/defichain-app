// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WalletPage component should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <Connect(WalletPage)
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/route/1",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": false,
            "params": Object {
              "id": "1",
            },
            "path": "/route/:id",
            "url": "/route/1",
          }
        }
      >
        <WalletPage
          blockChainInfo={Object {}}
          fetchInstantBalanceRequest={[Function]}
          fetchInstantPendingBalanceRequest={[Function]}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/route/1",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": false,
              "params": Object {
                "id": "1",
              },
              "path": "/route/:id",
              "url": "/route/1",
            }
          }
          openBackupWallet={[Function]}
          pendingBalance={0}
          startUpdateApp={[Function]}
          unit="DFI"
          walletBalance={0}
        >
          <div
            className="main-wrapper"
          >
            <HelmetWrapper
              defer={true}
              encodeSpecialCharacters={true}
            >
              <SideEffect(NullComponent)
                defer={true}
                encodeSpecialCharacters={true}
                title="Wallet - DeFi Wallet"
                titleAttributes={Object {}}
              >
                <NullComponent
                  defer={true}
                  encodeSpecialCharacters={true}
                  title="Wallet - DeFi Wallet"
                  titleAttributes={Object {}}
                />
              </SideEffect(NullComponent)>
            </HelmetWrapper>
            <Connect(Header)>
              <Header
                openBackupWallet={[Function]}
                startUpdateApp={[Function]}
                updateAvailableBadge={false}
              >
                <header
                  className="header-bar"
                >
                  <Button
                    className="header-bar-back"
                    color="link"
                    tag={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "activeClassName": [Function],
                          "activeStyle": [Function],
                          "aria-current": [Function],
                          "className": [Function],
                          "exact": [Function],
                          "innerRef": [Function],
                          "isActive": [Function],
                          "location": [Function],
                          "onClick": [Function],
                          "replace": [Function],
                          "sensitive": [Function],
                          "strict": [Function],
                          "style": [Function],
                          "target": [Function],
                          "to": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    to="/wallet/tokens?value=0&unit=DFI"
                  >
                    <NavLink
                      aria-label={null}
                      className="header-bar-back btn btn-link"
                      onClick={[Function]}
                      to="/wallet/tokens?value=0&unit=DFI"
                    >
                      <Link
                        aria-current={null}
                        aria-label={null}
                        className="header-bar-back btn btn-link"
                        onClick={[Function]}
                        to={
                          Object {
                            "hash": "",
                            "pathname": "/wallet/tokens",
                            "search": "?value=0&unit=DFI",
                            "state": null,
                          }
                        }
                      >
                        <LinkAnchor
                          aria-current={null}
                          aria-label={null}
                          className="header-bar-back btn btn-link"
                          href="/wallet/tokens?value=0&unit=DFI"
                          navigate={[Function]}
                          onClick={[Function]}
                        >
                          <a
                            aria-current={null}
                            aria-label={null}
                            className="header-bar-back btn btn-link"
                            href="/wallet/tokens?value=0&unit=DFI"
                            onClick={[Function]}
                          >
                            <MdArrowBack>
                              <IconBase
                                attr={
                                  Object {
                                    "viewBox": "0 0 24 24",
                                  }
                                }
                              >
                                <svg
                                  fill="currentColor"
                                  height="1em"
                                  stroke="currentColor"
                                  strokeWidth="0"
                                  style={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  width="1em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                                    key="0"
                                  />
                                </svg>
                              </IconBase>
                            </MdArrowBack>
                            <span
                              className="d-lg-inline"
                            >
                              Balances
                            </span>
                          </a>
                        </LinkAnchor>
                      </Link>
                    </NavLink>
                  </Button>
                  <div>
                    <TokenAvatar
                      symbol="DFI"
                    >
                      <ForwardRef(withAvatarConfig)
                        maxInitials={2}
                        name="DFI"
                        round={true}
                        size="24px"
                        src="test-file-stub"
                        textSizeRatio={3}
                      >
                        <Avatar
                          avatarRedirectUrl={null}
                          cache={
                            Cache {
                              "cachePrefix": "react-avatar/",
                              "sourceSize": 20,
                              "sourceTTL": 604800000,
                            }
                          }
                          className=""
                          colors={
                            Array [
                              "#d73d32",
                              "#7e3794",
                              "#4285f4",
                              "#67ae3f",
                              "#d61a7f",
                              "#ff4080",
                            ]
                          }
                          fgColor="#FFF"
                          initials={[Function]}
                          maxInitials={2}
                          name="DFI"
                          round={true}
                          size="24px"
                          src="test-file-stub"
                          textMarginRatio={0.15}
                          textSizeRatio={3}
                          unstyled={false}
                        >
                          <div
                            className=" sb-avatar"
                            style={
                              Object {
                                "borderRadius": "100%",
                                "display": "inline-block",
                                "fontFamily": "Helvetica, Arial, sans-serif",
                                "height": "24px",
                                "verticalAlign": "middle",
                                "width": "24px",
                              }
                            }
                          >
                            <div
                              className=" sb-avatar__text"
                              style={
                                Object {
                                  "background": undefined,
                                  "borderRadius": "100%",
                                  "color": "#FFF",
                                  "height": "24px",
                                  "lineHeight": "initial",
                                  "textAlign": "center",
                                  "width": "24px",
                                }
                              }
                              title="DFI"
                            >
                              <div
                                style={
                                  Object {
                                    "display": "table",
                                    "height": "100%",
                                    "tableLayout": "fixed",
                                    "width": "100%",
                                  }
                                }
                              >
                                <span
                                  style={
                                    Object {
                                      "display": "table-cell",
                                      "fontSize": "100%",
                                      "verticalAlign": "middle",
                                      "whiteSpace": "nowrap",
                                    }
                                  }
                                >
                                  <span
                                    key="24px"
                                  />
                                </span>
                              </div>
                            </div>
                          </div>
                        </Avatar>
                      </ForwardRef(withAvatarConfig)>
                    </TokenAvatar>
                    <h1>
                      DFI
                       
                      wallet
                    </h1>
                  </div>
                  <ButtonGroup
                    role="group"
                    tag="div"
                  >
                    <div
                      className="btn-group"
                      role="group"
                    >
                      <Button
                        color="link"
                        size="sm"
                        tag={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "sensitive": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        to="/wallet/send"
                      >
                        <NavLink
                          aria-label={null}
                          className="btn btn-link btn-sm"
                          onClick={[Function]}
                          to="/wallet/send"
                        >
                          <Link
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-link btn-sm"
                            onClick={[Function]}
                            to={
                              Object {
                                "hash": "",
                                "pathname": "/wallet/send",
                                "search": "",
                                "state": null,
                              }
                            }
                          >
                            <LinkAnchor
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-link btn-sm"
                              href="/wallet/send"
                              navigate={[Function]}
                              onClick={[Function]}
                            >
                              <a
                                aria-current={null}
                                aria-label={null}
                                className="btn btn-link btn-sm"
                                href="/wallet/send"
                                onClick={[Function]}
                              >
                                <MdArrowUpward>
                                  <IconBase
                                    attr={
                                      Object {
                                        "viewBox": "0 0 24 24",
                                      }
                                    }
                                  >
                                    <svg
                                      fill="currentColor"
                                      height="1em"
                                      stroke="currentColor"
                                      strokeWidth="0"
                                      style={
                                        Object {
                                          "color": undefined,
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                      width="1em"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                                        key="0"
                                      />
                                    </svg>
                                  </IconBase>
                                </MdArrowUpward>
                                <span
                                  className="d-md-inline"
                                >
                                  Send
                                </span>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </NavLink>
                      </Button>
                      <Button
                        color="link"
                        size="sm"
                        tag={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "activeClassName": [Function],
                              "activeStyle": [Function],
                              "aria-current": [Function],
                              "className": [Function],
                              "exact": [Function],
                              "innerRef": [Function],
                              "isActive": [Function],
                              "location": [Function],
                              "onClick": [Function],
                              "replace": [Function],
                              "sensitive": [Function],
                              "strict": [Function],
                              "style": [Function],
                              "target": [Function],
                              "to": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        to="/wallet/receive"
                      >
                        <NavLink
                          aria-label={null}
                          className="btn btn-link btn-sm"
                          onClick={[Function]}
                          to="/wallet/receive"
                        >
                          <Link
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-link btn-sm"
                            onClick={[Function]}
                            to={
                              Object {
                                "hash": "",
                                "pathname": "/wallet/receive",
                                "search": "",
                                "state": null,
                              }
                            }
                          >
                            <LinkAnchor
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-link btn-sm"
                              href="/wallet/receive"
                              navigate={[Function]}
                              onClick={[Function]}
                            >
                              <a
                                aria-current={null}
                                aria-label={null}
                                className="btn btn-link btn-sm"
                                href="/wallet/receive"
                                onClick={[Function]}
                              >
                                <MdArrowDownward>
                                  <IconBase
                                    attr={
                                      Object {
                                        "viewBox": "0 0 24 24",
                                      }
                                    }
                                  >
                                    <svg
                                      fill="currentColor"
                                      height="1em"
                                      stroke="currentColor"
                                      strokeWidth="0"
                                      style={
                                        Object {
                                          "color": undefined,
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                      width="1em"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                        key="0"
                                      />
                                    </svg>
                                  </IconBase>
                                </MdArrowDownward>
                                <span
                                  className="d-md-inline"
                                >
                                  Receive
                                </span>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </NavLink>
                      </Button>
                    </div>
                  </ButtonGroup>
                </header>
              </Header>
            </Connect(Header)>
            <div
              className="content"
            >
              <section>
                <Row
                  tag="div"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <div
                    className="row"
                  >
                    <Col
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="col"
                      >
                        <StatCard
                          icon={
                            <MdRefresh
                              onClick={[Function]}
                              size={30}
                            />
                          }
                          label="Available balance"
                          refreshFlag={false}
                          unit="DFI"
                          value={0}
                        >
                          <Card
                            tag="div"
                          >
                            <div
                              className="card"
                            >
                              <CardBody
                                tag="div"
                              >
                                <div
                                  className="card-body"
                                >
                                  <Row
                                    tag="div"
                                    widths={
                                      Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ]
                                    }
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="col"
                                        >
                                          Available balance
                                        </div>
                                      </Col>
                                      <Col
                                        className="undefined "
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="undefined  col"
                                        >
                                          <MdRefresh
                                            onClick={[Function]}
                                            size={30}
                                          >
                                            <IconBase
                                              attr={
                                                Object {
                                                  "viewBox": "0 0 24 24",
                                                }
                                              }
                                              onClick={[Function]}
                                              size={30}
                                            >
                                              <svg
                                                fill="currentColor"
                                                height={30}
                                                onClick={[Function]}
                                                stroke="currentColor"
                                                strokeWidth="0"
                                                style={
                                                  Object {
                                                    "color": undefined,
                                                  }
                                                }
                                                viewBox="0 0 24 24"
                                                width={30}
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
                                                  key="0"
                                                />
                                              </svg>
                                            </IconBase>
                                          </MdRefresh>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    tag="div"
                                    widths={
                                      Array [
                                        "xs",
                                        "sm",
                                        "md",
                                        "lg",
                                        "xl",
                                      ]
                                    }
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="col"
                                        >
                                          <NumberMask
                                            defaultValue={0}
                                            value="0.00000000"
                                          >
                                            <NumberFormat
                                              allowEmptyFormatting={false}
                                              allowLeadingZeros={false}
                                              allowNegative={true}
                                              decimalSeparator="."
                                              defaultValue={0}
                                              displayType="text"
                                              fixedDecimalScale={false}
                                              isAllowed={[Function]}
                                              isNumericString={true}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onMouseUp={[Function]}
                                              onValueChange={[Function]}
                                              prefix=""
                                              suffix=""
                                              thousandSeparator={true}
                                              thousandsGroupStyle="thousand"
                                              type="text"
                                              value="0.00000000"
                                            >
                                              <span>
                                                0.00000000
                                              </span>
                                            </NumberFormat>
                                          </NumberMask>
                                        </div>
                                      </Col>
                                      <Col
                                        className="undefined undefined"
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="undefined undefined col"
                                        >
                                          DFI
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </CardBody>
                            </div>
                          </Card>
                        </StatCard>
                      </div>
                    </Col>
                  </div>
                </Row>
              </section>
              <Connect(WalletTxns)
                tokenSymbol="DFI"
              >
                <WalletTxns
                  accountHistoryCount=""
                  accountHistoryCountRequest={[Function]}
                  blockCount={0}
                  combineAccountHistoryData={
                    Object {
                      "data": Array [],
                      "isError": "",
                      "isLoading": false,
                    }
                  }
                  data={Array []}
                  fetchBlockCount={[Function]}
                  fetchBlockDataForTrxRequestLoading={[Function]}
                  fetchWalletTokenTransactionsListRequestLoading={[Function]}
                  fetchWalletTokenTransactionsListResetRequest={[Function]}
                  fetchWalletTxns={[Function]}
                  isError="Invalid configuration"
                  isLoading={false}
                  minBlockHeight={0}
                  tokenSymbol="DFI"
                  unit="DFI"
                  walletTxnCount={0}
                  walletTxns={Array []}
                >
                  <section
                    className="mb-5"
                  >
                    <div>
                      <h2>
                        Transactions
                      </h2>
                      <div
                        className="btn-group"
                      >
                        <FormGroup
                          tag="div"
                        >
                          <div
                            className="form-group"
                          >
                            <CustomInput
                              checked={false}
                              id="includeRewards"
                              label="Include reward transactions"
                              onChange={[Function]}
                              type="checkbox"
                            >
                              <div
                                className="custom-checkbox custom-control"
                                hidden={false}
                              >
                                <input
                                  checked={false}
                                  className="custom-control-input"
                                  id="includeRewards"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                <label
                                  className="custom-control-label"
                                  htmlFor="includeRewards"
                                >
                                  Include reward transactions
                                </label>
                              </div>
                            </CustomInput>
                          </div>
                        </FormGroup>
                        <Button
                          color="link"
                          onClick={[Function]}
                          size="sm"
                          tag="button"
                        >
                          <button
                            aria-label={null}
                            className="btn btn-link btn-sm"
                            onClick={[Function]}
                            type="button"
                          >
                            <MdFileDownload>
                              <IconBase
                                attr={
                                  Object {
                                    "viewBox": "0 0 24 24",
                                  }
                                }
                              >
                                <svg
                                  fill="currentColor"
                                  height="1em"
                                  stroke="currentColor"
                                  strokeWidth="0"
                                  style={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                  viewBox="0 0 24 24"
                                  width="1em"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
                                    key="0"
                                  />
                                </svg>
                              </IconBase>
                            </MdFileDownload>
                            <span
                              className="d-lg-inline"
                            >
                              EXPORT DATA
                            </span>
                          </button>
                        </Button>
                        <DownloadCsvModal
                          CsvModalOpen={false}
                          downloadDisable={true}
                          error=""
                          filename="Transactions_2021-3-17_11-21-7.csv"
                          handleCheckBox={[Function]}
                          handleCsvButtonClick={[Function]}
                          handleDownloadWindow={[Function]}
                          handleRegularNumInputs={[Function]}
                          maxBlock={[Function]}
                          reqData={
                            Object {
                              "blockHeight": 0,
                              "limit": 100,
                              "no_rewards": true,
                              "token": "DFI",
                            }
                          }
                          toggle={[Function]}
                          tokenSymbol="DFI"
                          transactionData={Array []}
                        >
                          <Modal
                            autoFocus={true}
                            backdrop={true}
                            backdropTransition={
                              Object {
                                "mountOnEnter": true,
                                "timeout": 150,
                              }
                            }
                            centered={true}
                            container="body"
                            fade={false}
                            isOpen={false}
                            keyboard={true}
                            modalTransition={
                              Object {
                                "timeout": 300,
                              }
                            }
                            onClosed={[Function]}
                            onOpened={[Function]}
                            returnFocusAfterClose={true}
                            role="dialog"
                            scrollable={false}
                            toggle={[Function]}
                            trapFocus={false}
                            unmountOnClose={true}
                            zIndex={1050}
                          />
                        </DownloadCsvModal>
                      </div>
                    </div>
                    <Row
                      tag="div"
                      widths={
                        Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ]
                      }
                    >
                      <div
                        className="row"
                      >
                        <Col
                          tag="div"
                          widths={
                            Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ]
                          }
                          xs="12"
                        >
                          <div
                            className="col-12"
                          >
                            <div>
                              Invalid configuration
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </section>
                </WalletTxns>
              </Connect(WalletTxns)>
            </div>
          </div>
        </WalletPage>
      </Connect(WalletPage)>
    </Provider>
  </Router>
</BrowserRouter>
`;
