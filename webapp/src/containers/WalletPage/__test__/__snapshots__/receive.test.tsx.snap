// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReceivePage component should check for snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <ReceivePage
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/route/1",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": false,
            "params": Object {
              "id": "1",
            },
            "path": "/route/:id",
            "url": "/route/1",
          }
        }
      >
        <div
          className="main-wrapper"
        >
          <HelmetWrapper
            defer={true}
            encodeSpecialCharacters={true}
          >
            <SideEffect(NullComponent)
              defer={true}
              encodeSpecialCharacters={true}
              title="Receive - DeFi Wallet"
              titleAttributes={Object {}}
            >
              <NullComponent
                defer={true}
                encodeSpecialCharacters={true}
                title="Receive - DeFi Wallet"
                titleAttributes={Object {}}
              />
            </SideEffect(NullComponent)>
          </HelmetWrapper>
          <Connect(Header)>
            <Header
              openBackupWallet={[Function]}
              startUpdateApp={[Function]}
              updateAvailableBadge={false}
            >
              <header
                className="header-bar"
              >
                <Button
                  className="header-bar-back"
                  color="link"
                  tag={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "activeClassName": [Function],
                        "activeStyle": [Function],
                        "aria-current": [Function],
                        "className": [Function],
                        "exact": [Function],
                        "innerRef": [Function],
                        "isActive": [Function],
                        "location": [Function],
                        "onClick": [Function],
                        "replace": [Function],
                        "sensitive": [Function],
                        "strict": [Function],
                        "style": [Function],
                        "target": [Function],
                        "to": [Function],
                      },
                      "render": [Function],
                    }
                  }
                  to="/"
                >
                  <NavLink
                    aria-label={null}
                    className="header-bar-back btn btn-link"
                    onClick={[Function]}
                    to="/"
                  >
                    <Link
                      aria-current="page"
                      aria-label={null}
                      className="header-bar-back btn btn-link active"
                      onClick={[Function]}
                      style={Object {}}
                      to={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": null,
                        }
                      }
                    >
                      <LinkAnchor
                        aria-current="page"
                        aria-label={null}
                        className="header-bar-back btn btn-link active"
                        href="/"
                        navigate={[Function]}
                        onClick={[Function]}
                        style={Object {}}
                      >
                        <a
                          aria-current="page"
                          aria-label={null}
                          className="header-bar-back btn btn-link active"
                          href="/"
                          onClick={[Function]}
                          style={Object {}}
                        >
                          <MdArrowBack>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdArrowBack>
                          <span
                            className="d-lg-inline text-uppercase"
                          >
                            Back
                          </span>
                        </a>
                      </LinkAnchor>
                    </Link>
                  </NavLink>
                </Button>
                <h1>
                  Receive
                </h1>
                <ButtonGroup
                  role="group"
                  tag="div"
                >
                  <div
                    className="btn-group"
                    role="group"
                  >
                    <Button
                      color="link"
                      tag={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "activeClassName": [Function],
                            "activeStyle": [Function],
                            "aria-current": [Function],
                            "className": [Function],
                            "exact": [Function],
                            "innerRef": [Function],
                            "isActive": [Function],
                            "location": [Function],
                            "onClick": [Function],
                            "replace": [Function],
                            "sensitive": [Function],
                            "strict": [Function],
                            "style": [Function],
                            "target": [Function],
                            "to": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      to="/wallet/receive/request"
                    >
                      <NavLink
                        aria-label={null}
                        className="btn btn-link"
                        onClick={[Function]}
                        to="/wallet/receive/request"
                      >
                        <Link
                          aria-current={null}
                          aria-label={null}
                          className="btn btn-link"
                          onClick={[Function]}
                          to={
                            Object {
                              "hash": "",
                              "pathname": "/wallet/receive/request",
                              "search": "",
                              "state": null,
                            }
                          }
                        >
                          <LinkAnchor
                            aria-current={null}
                            aria-label={null}
                            className="btn btn-link"
                            href="/wallet/receive/request"
                            navigate={[Function]}
                            onClick={[Function]}
                          >
                            <a
                              aria-current={null}
                              aria-label={null}
                              className="btn btn-link"
                              href="/wallet/receive/request"
                              onClick={[Function]}
                            >
                              <MdAdd>
                                <IconBase
                                  attr={
                                    Object {
                                      "viewBox": "0 0 24 24",
                                    }
                                  }
                                >
                                  <svg
                                    fill="currentColor"
                                    height="1em"
                                    stroke="currentColor"
                                    strokeWidth="0"
                                    style={
                                      Object {
                                        "color": undefined,
                                      }
                                    }
                                    viewBox="0 0 24 24"
                                    width="1em"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                      key="0"
                                    />
                                  </svg>
                                </IconBase>
                              </MdAdd>
                              <span
                                className="d-lg-inline"
                              >
                                New address
                              </span>
                            </a>
                          </LinkAnchor>
                        </Link>
                      </NavLink>
                    </Button>
                  </div>
                </ButtonGroup>
              </header>
            </Header>
          </Connect(Header)>
          <div
            className="content"
          >
            <section>
              <Connect(PaymentRequestList)>
                <PaymentRequestList
                  fetchPaymentRequest={[Function]}
                  paymentRequests={Array []}
                  removeReceiveTxns={[Function]}
                >
                  <section
                    className="mb-5"
                  >
                    <Card
                      className="table-responsive-md"
                      tag="div"
                    >
                      <div
                        className="table-responsive-md card"
                      >
                        <CardBody
                          tag="div"
                        >
                          <div
                            className="card-body"
                          >
                            No receive addresses available
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </section>
                </PaymentRequestList>
              </Connect(PaymentRequestList)>
            </section>
          </div>
        </div>
      </ReceivePage>
    </Provider>
  </Router>
</BrowserRouter>
`;
