export enum RPCMethods {
  GET_BLOCKCHAIN_INFO = 'getblockchaininfo',
  SEND_TO_ADDRESS = 'sendtoaddress',
  SEND_MANY = 'sendmany',
  VALIDATE_ADDRESS = 'validateaddress',
  LIST_RECEIVED_BY_ADDRESS = 'listreceivedbyaddress',
  GET_NEW_ADDRESS = 'getnewaddress',
  GET_BLOCK = 'getblock',
  GET_BLOCK_HASH = 'getblockhash',
  GET_BALANCE = 'getbalance',
  GET_BLOCK_COUNT = 'getblockcount',
  GET_PEER_INFO = 'getpeerinfo',
  LIST_TRANSACTIONS = 'listtransactions',
  GET_WALLET_INFO = 'getwalletinfo',
  GET_BALANCES = 'getbalances',
  GET_RAW_TRANSACTION = 'getrawtransaction',
  LIST_UNSPENT = 'listunspent',
  WALLET_CREATE_FUNDED_PSBT = 'walletcreatefundedpsbt',
  WALLET_PROCESS_PSBT = 'walletprocesspsbt',
  FINALIZE_PSBT = 'finalizepsbt',
  DECODE_RAW_TRANSACTION = 'decoderawtransaction',
  CREATE_MASTER_NODE = 'createmasternode',
  CREATE_TOKEN = 'createtoken',
  MINT_TOKEN = 'minttokens',
  UPDATE_TOKEN = 'updatetoken',
  LIST_MASTER_NODE = 'listmasternodes',
  LIST_TOKEN = 'listtokens',
  DESTROY_TOKEN = 'destroytoken',
  GET_ACCOUNT = 'getaccount',
  LIST_ACCOUNTS = 'listaccounts',
  RESIGN_MASTER_NODE = 'resignmasternode',
  GET_TOKEN_NODE = 'gettoken',
  GET_TOKEN_BALANCES = 'gettokenbalances',
  DUMP_PRIV_KEY = 'dumpprivkey',
  IMPORT_PRIV_KEY = 'importprivkey',
  GET_ADDRESS_INFO = 'getaddressinfo',
  STOP = 'stop',
  DUMP_WALLET = 'dumpwallet',
  IMPORT_WALLET = 'importwallet',
  ACCOUNT_TO_ACCOUNT = 'accounttoaccount',
  SEND_TOKENS_TO_ADDRESS = 'sendtokenstoaddress',
  ACCOUNT_TO_UTXOS = 'accounttoutxos',
  UTXOS_TO_ACCOUNT = 'utxostoaccount',
  GET_TRANSACTION = 'gettransaction',
  SET_LABEL = 'setlabel',
  SET_HD_SEED = 'sethdseed',

  // wallet lock/unlock methods
  ENCRYPT_WALLET = 'encryptwallet',
  WALLET_PASSPHRASE = 'walletpassphrase',
  WALLET_LOCK = 'walletlock',

  // LP RPC Methods
  LIST_POOL_PAIRS = 'listpoolpairs',
  LIST_POOL_SHARES = 'listpoolshares',
  GET_POOL_PAIR = 'getpoolpair',
  ADD_POOL_LIQUIDITY = 'addpoolliquidity',
  POOL_SWAP = 'poolswap',
  REMOVE_POOL_LIQUIDITY = 'removepoolliquidity',
  TEST_POOL_SWAP = 'testpoolswap',
  GET_GOV = 'getgov',
  LIST_ACCOUNT_HISTORY = 'listaccounthistory',
  ACCOUNT_HISTORY_COUNT = 'accounthistorycount',
}

export default RPCMethods;
